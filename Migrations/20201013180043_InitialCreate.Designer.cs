// <auto-generated />
using System;
using FamilySearchYouthAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FamilySearchYouthAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201013180043_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("FamilySearchYouthAPI.Models.Coordinate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Lat")
                        .HasColumnType("REAL");

                    b.Property<double>("Lng")
                        .HasColumnType("REAL");

                    b.Property<int?>("RegionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Coordinate");
                });

            modelBuilder.Entity("FamilySearchYouthAPI.Models.Period", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EndYear")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StartYear")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Periods");
                });

            modelBuilder.Entity("FamilySearchYouthAPI.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("FamilySearchYouthAPI.Models.RegionalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChurchOfJesusChristOfLatterDaySaintsStory")
                        .HasColumnType("TEXT");

                    b.Property<string>("Clothing")
                        .HasColumnType("TEXT");

                    b.Property<string>("Economy")
                        .HasColumnType("TEXT");

                    b.Property<string>("FamilyStructure")
                        .HasColumnType("TEXT");

                    b.Property<string>("FamousPeople")
                        .HasColumnType("TEXT");

                    b.Property<string>("Folklore")
                        .HasColumnType("TEXT");

                    b.Property<string>("Food")
                        .HasColumnType("TEXT");

                    b.Property<string>("Geography")
                        .HasColumnType("TEXT");

                    b.Property<string>("Government")
                        .HasColumnType("TEXT");

                    b.Property<string>("HistoricalEvents")
                        .HasColumnType("TEXT");

                    b.Property<string>("Holidays")
                        .HasColumnType("TEXT");

                    b.Property<string>("Migrations")
                        .HasColumnType("TEXT");

                    b.Property<string>("Military")
                        .HasColumnType("TEXT");

                    b.Property<string>("Money")
                        .HasColumnType("TEXT");

                    b.Property<string>("Music")
                        .HasColumnType("TEXT");

                    b.Property<string>("Occupations")
                        .HasColumnType("TEXT");

                    b.Property<int>("PeriodId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pioneers")
                        .HasColumnType("TEXT");

                    b.Property<int>("RegionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RegionName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Religion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sports")
                        .HasColumnType("TEXT");

                    b.Property<string>("Technology")
                        .HasColumnType("TEXT");

                    b.Property<string>("Temples")
                        .HasColumnType("TEXT");

                    b.Property<string>("Wars")
                        .HasColumnType("TEXT");

                    b.Property<string>("Weather")
                        .HasColumnType("TEXT");

                    b.Property<string>("Wildlife")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("RegionalInformation");
                });

            modelBuilder.Entity("FamilySearchYouthAPI.Models.Coordinate", b =>
                {
                    b.HasOne("FamilySearchYouthAPI.Models.Region", null)
                        .WithMany("Coordinates")
                        .HasForeignKey("RegionId");
                });

            modelBuilder.Entity("FamilySearchYouthAPI.Models.RegionalInformation", b =>
                {
                    b.HasOne("FamilySearchYouthAPI.Models.Region", null)
                        .WithMany("RegionalInformation")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
